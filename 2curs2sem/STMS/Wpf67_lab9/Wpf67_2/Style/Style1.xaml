<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Wpf67.Style"
                    xmlns:local1="clr-namespace:Wpf67.View">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Brushes.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!-- Button -->
    <Style TargetType="Button">
        <Setter Property="TextOptions.TextHintingMode" Value="Animated" />
        <Setter Property="Foreground" Value="{StaticResource ControlForegroundWhite}" />
        <Setter Property="Background" Value="{StaticResource ControlBackgroundNormal}"/>
        <Setter Property="BorderThickness" Value="{StaticResource BorderThicknessButton}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ControlBorderBrush}"/>
        <Setter Property="Padding" Value="{StaticResource MarginContentButton}"/>
        <Setter Property="FontSize" Value="22"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="1">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True"><!-- Триггеры свойств -->
                <Setter Property="Background" Value="WhiteSmoke"/>
                <Setter Property="Foreground" Value="Black"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="Gray"/>
                <Setter Property="Foreground" Value="Black"/>
            </Trigger>
        </Style.Triggers>

    </Style>

    <Style x:Key="butNext"  TargetType="Button">
        <Setter Property="TextOptions.TextHintingMode" Value="Animated" />
        <Setter Property="Foreground" Value="{StaticResource ControlForegroundWhite}" />
        <Setter Property="Background" Value="{StaticResource ControlBackgroundNormal}"/>
        <Setter Property="BorderThickness" Value="{StaticResource BorderThicknessButton}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ControlBorderBrush}"/>
        <Setter Property="Padding" Value="{StaticResource MarginContentButton}"/>
        <Setter Property="FontSize" Value="22"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}"><!-- Шаблон -->
                    <Border Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="2">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="WhiteSmoke"/>
                <Setter Property="Foreground" Value="Black"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="Gray"/>
                <Setter Property="Foreground" Value="Black"/>
            </Trigger>
        </Style.Triggers>

    </Style>

   


    <ControlTemplate TargetType="Button" x:Key="btTemplate1">
        <Border CornerRadius="25" BorderBrush="WhiteSmoke" BorderThickness="4"
                    Background="Gray" Height="Auto" Width="Auto" >
            <ContentControl Margin="5" HorizontalAlignment="Center" VerticalAlignment="Center" Content ="Undo"/>
        </Border>
    </ControlTemplate>

    <ControlTemplate TargetType="Button" x:Key="btTemplate2">
        <Border CornerRadius="25" BorderBrush="WhiteSmoke" BorderThickness="4"
                    Background="Gray" Height="Auto" Width="Auto" >
            <ContentControl Margin="5" HorizontalAlignment="Center" VerticalAlignment="Center" Content ="Redo"/>
        </Border>
    </ControlTemplate>


    <Style x:Key="ButDeleteDate" TargetType="Button">
        <Setter Property="Margin" Value="10 8 10 8" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Height" Value="30" />
    </Style>

    <Style x:Key="ButAdd" TargetType="Button">
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Width" Value="100"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Style.Triggers>

                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="AliceBlue"/>
                </Trigger>
                
                <MultiTrigger>  <!-- Мультитриггер-->
                    <MultiTrigger.Conditions>
                        <Condition Property="IsMouseOver" Value="True"/>
                        <Condition Property="IsPressed" Value="True"/>
                    </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="Red"/>
            </MultiTrigger>
            <EventTrigger RoutedEvent="Mouse.MouseEnter"><!--Ивенттриггер-->
                <EventTrigger.Actions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.2"
                                                 Storyboard.TargetProperty="FontSize"
                                                 To="12">
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>
            <EventTrigger RoutedEvent="Mouse.MouseLeave">
                <EventTrigger.Actions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.2"
                                                 Storyboard.TargetProperty="FontSize"
                                                 To="16">
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>
        </Style.Triggers>
       
    </Style>

   
    <!--  <Style x:Key="butDel" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Cursor="Hand">
                        <Border Name="back" Margin="0,1,0,0" Background="{StaticResource ButtonBackground}">
                            <Image Name="imgBut" Source="img/but_delete.ico" />
                        </Border>
                        <Border BorderThickness="1" BorderBrush="#FF004F92">
                            <Border BorderThickness="0,0,1,0" BorderBrush="#FF101D29" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->


    <Style x:Key="TBSelectSeat" TargetType="TextBlock">
        <Setter Property="FontSize" Value="22"/>
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Width" Value="80"/>
        <Setter Property="Height" Value="60"/>
        <Setter Property="Margin" Value="1"/>
        <Setter Property="Background" Value="WhiteSmoke"/>
        <Setter Property="Foreground" Value="Black"/>

    </Style>

    <!-- DataGrid -->
   

    <Style x:Key="TextBoxStyle00_ByRegistration_unvalid" TargetType="{x:Type TextBoxBase}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <!-- -->
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border 
          Name="Border"
          CornerRadius="10" 
          Padding="0"
          Background="Gray"
          BorderBrush="Red"                        
          BorderThickness="3" >
                        <ScrollViewer Margin="0" x:Name="PART_ContentHost"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Control.Foreground" Value="White" />
        <Setter Property="Control.FontSize" Value="30" />
        <Setter Property="Control.Margin" Value="120 5 120 5" />
    </Style>

    <Style x:Key="TextBoxInfoBD" TargetType="TextBox">
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Width" Value="650"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>

    <Style x:Key="TextBoxTime" TargetType="TextBox">
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Width" Value="650"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>

    <Style x:Key="TextBlockRouteBus" TargetType="TextBlock">
        <Setter Property="FontSize" Value="22"/>
        <Setter Property="Margin" Value="10"/>
     <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>

    <Style x:Key="TextBlockRouteBusCost" TargetType="TextBlock">
        <Setter Property="FontSize" Value="22"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
    </Style>

    
    
    <Style x:Key="ButAddInfoDB" TargetType="Button">
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Width" Value="100"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>

    <Style x:Key="ButAddTransporterDB" TargetType="Button">
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Width" Value="100"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        
        
        
    </Style>

    <Style x:Key="ButSelectRoute" TargetType="Button">
        <Setter Property="TextOptions.TextHintingMode" Value="Animated" />
        <Setter Property="Foreground" Value="{StaticResource ControlForegroundWhite}" />
        <Setter Property="Background" Value="{StaticResource ControlBackgroundNormal}"/>
        <Setter Property="BorderThickness" Value="{StaticResource BorderThicknessButton}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ControlBorderBrush}"/>
        <Setter Property="Padding" Value="{StaticResource MarginContentButton}"/>
        <Setter Property="FontSize" Value="22"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="1">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="WhiteSmoke"/>
                <Setter Property="Foreground" Value="Black"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="Gray"/>
                <Setter Property="Foreground" Value="Black"/>
            </Trigger>

            <DataTrigger Binding="{Binding ElementName=FindRouteListBox, Path=Visibility}" Value="Collapsed"><!-- ДатаТриггер! -->
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding ElementName=FindRouteListBox, Path=SelectedItem}" Value="{x:Null}">

                <Setter Property="Control.Background" Value="Gray"/>
                <Setter Property="Control.Foreground" Value="DarkGray"/>
                <Setter Property="IsEnabled" Value="False"/>
            </DataTrigger>
        </Style.Triggers>
        
    </Style>

    <Style x:Key="ComboBoxInfoBD" TargetType="ComboBox">
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Width" Value="650"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>

    
    <Style x:Key="ListBoxСhoiseSeat" TargetType="ListBox">
        <!-- Rest of the style -->
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DataNoChangeDB" TargetType="DataGridCell">
        <Setter Property="Background" Value="#f7f7f7"></Setter>
        <Setter Property="Foreground" Value="Gray"></Setter>
        
        <!---e6e6e6-->
        
    </Style>

    <StreamGeometry x:Key="KeyIcon">
        M21,11C21,16.55 17.16,21.74 12,23C6.84,21.74 3,16.55 3,11V5L12,1L21,5V11M12,21C15.75,20 19,15.54 19,11.22V6.3L12,3.18L5,6.3V11.22C5,15.54 8.25,20 12,21M12,6A3,3 0 0,1 15,9C15,10.31 14.17,11.42 13,11.83V14H15V16H13V18H11V11.83C9.83,11.42 9,10.31 9,9A3,3 0 0,1 12,6M12,8A1,1 0 0,0 11,9A1,1 0 0,0 12,10A1,1 0 0,0 13,9A1,1 0 0,0 12,8Z
    </StreamGeometry>

    <Style x:Key="ErrorStyle" TargetType="local1:CustomPasswordBox">
        <Setter Property="Background" Value="#99DE0000"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Icon" Value="M21,11C21,16.55 17.16,21.74 12,23C6.84,21.74 3,16.55 3,11V5L12,1L21,5V11M12,21C15.75,20 19,15.54 19,11.22V6.3L12,3.18L5,6.3V11.22C5,15.54 8.25,20 12,21M12,6A3,3 0 0,1 15,9C15,10.31 14.17,11.42 13,11.83V14H15V16H13V18H11V11.83C9.83,11.42 9,10.31 9,9A3,3 0 0,1 12,6M12,8A1,1 0 0,0 11,9A1,1 0 0,0 12,10A1,1 0 0,0 13,9A1,1 0 0,0 12,8Z"/>
    </Style>


    <Style x:Key="BackGround">
        
        
    </Style>

</ResourceDictionary>