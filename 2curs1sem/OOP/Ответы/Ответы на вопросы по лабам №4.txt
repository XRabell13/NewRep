1. Перечислите свойства внутренних и вложенных классов?
Класс, который объявляется в пределах фигурных скобок другого класса, называется вложенным или внутренним классом. 

Вложенные классы имеют доступ ко всем членам, видимым содержащему их классу, даже если эти члены являются приватными. 
Вложенные классы, объявленные как public, позволяют создавать экземпляры коду, внешнему по отношению к охватывающему классу. Нотация обращения к вложенному классу подобна уточнению пространств имен.  

public class A {
public class В
{
}
public class EntryPoint {
static void Main() {
А.В b = new A.B () ;
}
}


2. Что такое статический класс и какие у него свойства?
Статический класс — это класс, от которого нельзя создать экземпляры. 
Класс считается статическим, если при его создании, перед ключевым словом class указывается ключевое слово static. Определение класса статическим, означает то, что этот класс является набором только статических сущностей (полей, методов, свойств и т.п.), и, внимание, создавать объекты такого класс нельзя! 
Некоторые свойства: 
►прямой потомок System.Object 
►экземпляры такого класса создавать запрещено 
►не должен реализовывать никаких интерфейсов (не вызвать) 
►нельзя использовать в качестве поля, параметра метода или локальной переменной 
►от него запрещено наследовать
►все элементы такого класса должны явным образом объявляться с модификатором static 
►может иметь статический  конструктор
►Компилятор не создает автоматически конструктор по умолчанию
►Класс не может иметь перегруженных операций. 

3. Каково назначение перегрузки операторов?
Язык C# предоставляет возможность строить специальные классы и структуры, которые также уникально реагируют на один и тот же набор базовых лексем (вроде операции +). 
4. Как используется ключевое слово operator?

Перегрузка операторов тесно связана с перегрузкой методов. Для перегрузки оператора служит ключевое слово operator, определяющее операторный метод, который, в свою очередь, определяет действие оператора относительно своего класса. Существуют две формы операторных методов (operator): одна - для унарных операторов, другая - для бинарных. Ниже приведена общая форма для каждой разновидности этих методов: 

// Общая форма перегрузки унарного оператора.
public static возвращаемый_тип operator op(тип_параметра операнд)
{
// операции
}

// Общая форма перегрузки бинарного оператора.
public static возвращаемый_тип operator op(тип_параметра1 операнд1,
тип_параметра2 операнд2)
{
// операции
}



5. Какие операции нельзя перегружать в C#?


[]
Операция [] не может быть перегружена. Oднако, аналогичную функциональность предлагают индексаторы
()
Операция () не может быть перегружена. Однако ту же функциональность предоставляют специальные методы преобразования
+=, -=, *=, /=, %=, &=, |=, ^=, <<=, >>=
Сокращенные операции присваивания не могут перегружаться; однако вы получаете их автоматически, перегружая соответствующую бинарную операцию


6. Можно ли перегрузкой отменить очередность выполнения операции?
Нет.

7. Истинно ли следующее утверждение: операция >= может быть перегружена.
Да,  но только в паре с <=

8. Сколько аргументов требуется для определения перегруженной унарной операции?
Один.

9. Можно ли перегружать операцию []?
Нет, но можно перегрузить индексатор.

10. Можно ли перегружать операцию ?

Нет.

11. Приведите пример оператора приведения типа

public static implicit|explicit operator Тип_в_который_надо_преобразовать(исходный_тип param)
{
    // логика преобразования
}
После модификаторов public static идет ключевое слово explicit (если преобразование явное, то есть нужна операция приведения типов) или implicit (если преобразование неявное). Затем идет ключевое слово operator и далее возвращаемый тип, в который надо преобразовать объект. В скобках в качестве параметра передается объект, который надо преобразовать. 

12. Что такое метод расширения? Как и где его можно использовать?

Методы расширения (extension methods) позволяют добавлять новые методы в уже существующие типы без создания нового производного класса.

13. Пусть дан фрагмент кода определения оператора преобразования типа. Определить форму преобразования.

public static implicit operator Point2D(Point3D a) {/* код*/;}

Неявная форма преобразования, так как стоит ключевое слово implicit.

14. Выберите верное утверждение.
Метод расширения может: 
1) получать доступ к public членам расширяемого класса(верное)
2) получать доступ к protected членам расширяемого класса
3) получать доступ к internal членам расширяемого класса
4) быть объявлен в любом классе
5) быть без параметров

15. Выберите из списка неверное правило перегрузки операторов для C#.
1) префиксные операции ++ и – – перегружаются парами
2) операции сравнения перегружаются парами: == и != ; < и >;<= и >=
3) перегруженные операции обязаны возвращать значения
4) должны объявляться как protected (неверное)
5) true и false можно перегружать 



